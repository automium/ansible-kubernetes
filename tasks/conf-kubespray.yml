---

- name: conf-kubespray | copy sample inventory to inventory/{{ cluster_name }}
  synchronize:
    src: /usr/src/cloud/kubespray/inventory/sample/
    dest: /usr/src/cloud/kubespray/inventory/{{ cluster_name }}

- name: conf-kubespray | copy dynamic inventory to file
  copy:
    content: "{{ dynamic_invertory }}"
    dest: /usr/src/cloud/kubespray/inventory/{{ cluster_name }}/hosts.ini

- name: conf-kubespray | set ignore_assert_errors to true
  lineinfile:
    path: /usr/src/cloud/kubespray/inventory/{{ cluster_name }}/group_vars/all/all.yml
    regexp: '^#ignore_assert_errors: false'
    line: 'ignore_assert_errors: true'

- name: conf-kubespray | comment loadbalancer_apiserver_localhost
  lineinfile:
    path: /usr/src/cloud/kubespray/inventory/{{ cluster_name }}/group_vars/all/all.yml
    regexp: '^loadbalancer_apiserver_localhost'
    line: '#loadbalancer_apiserver_localhost'

- name: conf-kubespray | comment loadbalancer_apiserver_type
  lineinfile:
    path: /usr/src/cloud/kubespray/inventory/{{ cluster_name }}/group_vars/all/all.yml
    regexp: '^loadbalancer_apiserver_type'
    line: '#loadbalancer_apiserver_type'

- name: conf-kubespray | comment loadbalancer_apiserver_healthcheck_port
  lineinfile:
    path: /usr/src/cloud/kubespray/inventory/{{ cluster_name }}/group_vars/all/all.yml
    regexp: '^loadbalancer_apiserver_healthcheck_port'
    line: '#loadbalancer_apiserver_healthcheck_port'

- name: conf-kubespray | comment defaut openstack_blockstorage_ignore_volume_az
  lineinfile:
    path: /usr/src/cloud/kubespray/inventory/{{ cluster_name }}/group_vars/all/all.yml
    regexp: '^openstack_blockstorage_ignore_volume_az'
    line: '#loadbalancer_apiserver_healthcheck_port'
  when: provider == "openstack"

- name: conf-kubespray | set all etcd member as alive
  tags:
    - others
  blockinfile:
    path: /usr/src/cloud/kubespray/inventory/{{ cluster_name }}/group_vars/etcd.yml
    block: |
      etcd_member_in_cluster:
        rc: 1

- name: conf-kubespray | show the frist master alive
  debug:
    var: host_list_kube_master_up[0]

- name: conf-kubespray | show master flag ( true of false )
  debug:
    var: master

- name: conf-kubespray | configure host IP
  set_fact:
    loadbalancer_apiserver_address: >-
      {% if master == "true" %}
      {{ ip | default(ansible_default_ipv4.address) }}
      {%- else -%}
      {{ host_list_kube_master_up[0] }}
      {%- endif -%}

- name: set apiserver_loadbalancer_domain_name
  set_fact:
    apiserver_loadbalancer_domain_name: "{{ cluster_name }}-kube-apiserver.service.automium.consul"

- name: conf-kubespray | Debug loadbalancer_apiserver_address
  debug:
    var: loadbalancer_apiserver_address

- name: conf-kubespray | debug show vars kube_conf
  debug:
    var: kube_conf

- name: conf-kubespray | filter kube_conf
  set_fact:
    kube_conf_nomalized: "{{ kube_conf | from_yaml }}"

- name: conf-kubespray | configure Automium kubernetes var in custom_confguration_yaml
  set_fact:
    custom_confguration_node_yaml: |
      kube_profiling: false
      kube_api_anonymous_auth: false
      kubernetes_audit: true
      audit_log_maxbackups: 10
      kube_apiserver_enable_admission_plugins:
        - "ServiceAccount"
      kube_feature_gates:
        - "RotateKubeletServerCertificate=true"
      kubelet_custom_flags:
        - "--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
        - "--event-qps=0"
      scheduler_custom_flags:
        - "--terminated-pod-gc-threshold=10"
        - "--profiling false"
      apiserver_custom_flags:
        - "--anonymous-auth=false"
        - "--profiling=false"
        - "--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
      kube_kubeadm_apiserver_extra_args:
        profiling: false
        tls-cipher-suites: "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
      kube_controller_manager_bind_address: 127.0.0.1
      kube_kubeadm_controller_extra_args:
        profiling: false
      kube_scheduler_bind_address: 127.0.0.1
      kube_kubeadm_scheduler_extra_args:
        profiling: false
      {{ kube_conf_nomalized | to_nice_yaml }}

- name: conf-kubespray | configure vars all certificates
  blockinfile:
    path: /usr/src/cloud/kubespray/inventory/{{ cluster_name }}/group_vars/all/all.yml
    block: |
      {% if provider == "openstack" %}
      cloud_provider: "openstack"
      openstack_blockstorage_ignore_volume_az: true
      {% endif %}
      apiserver_loadbalancer_domain_name: "{{ apiserver_loadbalancer_domain_name }}"
      loadbalancer_apiserver_localhost: false
      loadbalancer_apiserver:
        address: "{{ loadbalancer_apiserver_address }}"
        port: 6443
      etcd_access_addresses: https://{{ cluster_name }}-etcd.service.automium.consul:2379
      etcd_client_url: https://{{ cluster_name }}-etcd.service.automium.consul:2379
      etcd_cert_alt_names:
        - "etcd.kube-system.svc.{{'{{ ' }} dns_domain {{ ' }}'}}"
        - "etcd.kube-system.svc"
        - "etcd.kube-system"
        - "etcd"
        - "{{ cluster_name }}-etcd.service.automium.consul"
      {% if node == "true" %}
      node_labels:
        nodepool: "{{ name }}"
      {% endif %}
      calico_felix_prometheusmetricsenabled: true

- name: conf-kubespray | create host_vars in inventory
  file:
    path: /usr/src/cloud/kubespray/inventory/{{ cluster_name }}/host_vars/
    state: directory

- name: conf-kubespray | set custom node variable in high priority
  copy:
    content: "{{ custom_confguration_node_yaml }}"
    dest: /usr/src/cloud/kubespray/inventory/{{ cluster_name }}/host_vars/{{ ansible_hostname }}.yml
