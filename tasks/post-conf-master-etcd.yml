---

- name: post-conf-master-etcd | create etcd-scripts dir
  file:
    path: /usr/local/bin/etcd-scripts
    state: directory
    mode: 0755

- name: post-conf-master-etcd | grant access to folder /etc/ssl/etcd consul user
  acl:
    path: /etc/ssl/etcd
    entity: consul
    etype: user
    permissions: rx
    state: present

- name: post-conf-master-etcd | grant access to folder /etc/ssl/etcd/ssl consul user
  acl:
    path: /etc/ssl/etcd/ssl
    entity: consul
    etype: user
    permissions: rx
    state: present

- name: post-conf-master-etcd | set clustername
  set_fact:
    cluster_name: "{{ cluster_name }}"

- name: post-conf-master-etcd | set clustername
  set_fact:
    consul_allowed_cert_lists: |
      {% if master == 'true' %}
      - /etc/ssl/etcd/ssl/node-{{ ansible_hostname }}.pem
      - /etc/ssl/etcd/ssl/node-{{ ansible_hostname }}-key.pem
      {% endif %}
      {% if etcd == 'true' %}
      - /etc/ssl/etcd/ssl/member-{{ ansible_hostname }}.pem
      - /etc/ssl/etcd/ssl/member-{{ ansible_hostname }}-key.pem
      {% endif %}
      - /etc/ssl/etcd/ssl/ca.pem

- name: post-conf-master-etcd | grant access multiple file to consul
  acl:
    path: "{{item}}"
    entity: consul
    etype: user
    permissions: rx
    state: present
  with_items: "{{ consul_allowed_cert_lists | from_yaml }}"

- name: post-conf-master-etcd | grant access to folder /root/
  acl:
    path: /root
    entity: consul
    etype: user
    permissions: rx
    state: present

- name: post-conf-master-etcd | grant access to folder /root/.kube
  acl:
    path: /root/.kube
    entity: consul
    etype: user
    permissions: rx
    state: present
  when:
    - master == "true"

- name: post-conf-master-etcd | grant access to folder /root/.kube/config
  acl:
    path: "/root/.kube/config"
    entity: consul
    etype: user
    permissions: r
    recursive: yes
    state: present
  when:
    - master == "true"

- name: post-conf-master-etcd | allow access to kubeconfig
  acl:
    path: "/root/.kube/config"
    entity: consul
    etype: user
    permissions: r
    recursive: yes
    state: present
  when:
    - master == "true"

- name: post-conf-master-etcd | wait etcd service is up
  uri:
    url: http://{{consul}}:{{consul_port}}/v1/health/checks/{{ cluster_name }}-etcd
    method: GET
    status_code: 200
    body_format: json
  register: url
  until:
    - 'url.json[0].Status == "passing"'
  retries: 6000

- name: post-conf-master-etcd | clear etcd record in /etc/hosts for use consul
  lineinfile:
    state: absent
    path: /etc/hosts
    line: "{{ ansible_default_ipv4['address'] }} {{ cluster_name }}-etcd.service.automium.consul"
  when:
    - etcd == "true"

- name: post-conf-master-etcd | clear "{{ cluster_name }}-kube-apiserver.service.automium.consul" record in /etc/hosts for consul boostrap
  lineinfile:
    state: absent
    path: /etc/hosts
    line: "{{ ansible_default_ipv4['address'] }} {{ cluster_name }}-kube-apiserver.service.automium.consul"
  when:
    - master == "true"

- name: post-conf-master-etcd | remove kubernetes loadbalancer address into hosts file
  lineinfile:
    dest: /etc/hosts
    regexp: ".*{{ apiserver_loadbalancer_domain_name }}$"
    line: "{{ loadbalancer_apiserver_address }} {{ apiserver_loadbalancer_domain_name }}"
    state: absent
    backup: yes
    unsafe_writes: yes
